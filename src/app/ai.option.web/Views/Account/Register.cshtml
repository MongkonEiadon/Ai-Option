@using ai.option.web.ViewModels
@model LoginViewModel
@{ Layout = "_LayoutSinglePage"; }

<div id="particles-js" class="fullscreen">
    <canvas class="particles-js-canvas-el" style="width: 100%; height: 100%;" width="941" height="905"></canvas>
</div>

<div class="back-link">
    <a href="@Url.Action("Index", "Home")" class="btn btn-accent"> < Back to welcome page</a>
</div>

<div class="container-center animated slideInDown">
    <div class="view-header">
        <div class="header-icon">
            <i class="pe page-header-icon pe-7s-unlock"></i>
        </div>
        <div class="header-title">
            <h3 class="m-b-none">Register</h3>
            <small>
                Please enter your information to make a new accout.
            </small>
        </div>
    </div>

    <div class="panel panel-filled">
        <div class="panel-body">

        @using (Html.BeginForm("RegisterAsync", "Account", FormMethod.Post)) {
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress, new {@class = "control-label"})
                @Html.TextBoxFor(m => m.EmailAddress, new {@class = "form-control", id = "emailAddress", type = "email"})
                <span class="help-block small field-validation-valid"  data-valmsg-for="emailAddress" >@Html.ValidationMessageFor(m => m.EmailAddress)</span>

            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new {@class = "control-label"})
                @Html.TextBoxFor(m => m.Password, new {@class = "form-control", id = "password", type = "password"})
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmedPassword, new {@class = "control-label"})
                @Html.TextBoxFor(m => m.ConfirmedPassword, new {@class = "form-control", id = "confirmPassword", type = "password"})
                <span class="help-block small field-validation-valid" data-valmsg-for="confirmPassword"> @Html.ValidationMessageFor(m => m.ConfirmedPassword)</span>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.InvitationCode, new {@class = "control-label"})
                @Html.TextBoxFor(m => m.InvitationCode, new {@class = "form-control", id = "invitationCode", required = true, type = "password"})
                <span class="help-block small field-validation-valid" data-valmsg-for="invitationCode">@Html.ValidationMessageFor(m => m.InvitationCode)</span>
            </div>

            <div class="form-group">
                <span class="help-block small field-validation-error">@ViewData["ErrorMessage"]</span>
            </div>

            <div>
                <button type="submit" class="btn btn-accent">Register</button>
                <a class="btn btn-default" href="@Url.Action("Login", "Account")">Login</a>
            </div>
        }

        </div>
    </div>

</div>



@section Scripts {
    <script src="~/js/particles.min.js"></script>
    <script src="~/js/particlesRun.js"></script>
}